<?xml version="1.0" encoding="UTF-8"?>

<?xml-stylesheet href="#xslt" type="text/xml"?>

<a:doc
    xmlns:a="tag:rv1971@web.de,2021:alcamo-xsl#"
    xmlns:axsd="tag:rv1971@web.de,2021:alcamo-xsl:xsd#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsl:stylesheet
      xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
      xmlns:axsd="tag:rv1971@web.de,2021:alcamo-xsl:xsd#"
      xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
      xmlns:xsd="http://www.w3.org/2001/XMLSchema"
      xml:id="xslt"
      version="1.0"
      exclude-result-prefixes="axsd rdfs xsd">
    <xsl:import href="../xsl/xsd-access.xsl"/>

    <xsl:template match="/">
      <a:result>
        <xsl:apply-templates select="/a:doc/a:data"/>
     </a:result>
    </xsl:template>

    <xsl:template match="a:item">
      <xsl:variable name="xsdElem" select="key(@key, @value)"/>

      <a:item>
        <xsl:value-of select="@key"/>
        <xsl:text> </xsl:text>
        <xsl:value-of select="@value"/>
        <xsl:text> </xsl:text>
        <xsl:value-of select="$xsdElem/@rdfs:label"/>
        <xsl:text> </xsl:text>
        <xsl:apply-templates select="$xsdElem" mode="a:id"/>
      </a:item>
    </xsl:template>
  </xsl:stylesheet>

  <xsd:import namespace="http://foo.example.info"/>

  <xsd:import namespace="http://bar.example.info"/>

  <xsd:attribute name="foo" rdfs:label="Foo"/>

  <xsd:attributeGroup name="bar" rdfs:label="Bar" id="corge"/>

  <xsd:element name="foo" rdfs:label="Foo element">
    <xsd:annotation id="inner-annotation" rdfs:label="Corge annotation">
      <xsd:documentation>Lorem ipsum</xsd:documentation>
      <xsd:documentation id="inner-doc">Lorem ipsum</xsd:documentation>
    </xsd:annotation>

    <xsd:sequence>
      <xsd:element ref="foo-bar"/>
      <xsd:element ref="foo-baz" id="inner1"/>

      <xsd:choice>
        <xsd:element ref="foo-bar"/>
        <xsd:element name="baz"/>
      </xsd:choice>

      <xsd:choice>
        <xsd:element ref="foo-foo"/>
        <xsd:element name="inner-foo" id="inner2">
          <xsd:type>
            <xsd:restriction base="xsd:string">
              <xsd:enumeration value="FOO"/>
              <xsd:enumeration value="BAR" id="BAR"/>
            </xsd:restriction>
          </xsd:type>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:element>

  <xsd:group name="qux" rdfs:label="Qux"/>

  <xsd:simpleType name="quux" rdfs:label="Quux"/>

  <xsd:complexType name="baz" rdfs:label="Baz"/>

  <a:data>
    <a:item key="axsd:attributes" value="foo"/>
    <a:item key="axsd:attributeGroups" value="bar"/>
    <a:item key="axsd:elements" value="foo"/>
    <a:item key="axsd:groups" value="qux"/>
    <a:item key="axsd:types" value="quux"/>
    <a:item key="axsd:types" value="baz"/>
    <a:item key="axsd:types" value="corge"/>
    <a:item key="axsd:imports" value="http://foo.example.info"/>
    <a:item key="axsd:localElements" value="foo"/>
    <a:item key="axsd:localElements" value="baz"/>
    <a:item key="axsd:elements-with-id" value="corge"/>
    <a:item key="axsd:elements-with-id" value="inner-annotation"/>
    <a:item key="axsd:elements-with-id" value="inner-doc"/>
    <a:item key="axsd:elements-with-id" value="inner1"/>
    <a:item key="axsd:elements-with-id" value="inner2"/>
    <a:item key="axsd:elements-with-id" value="BAR"/>
  </a:data>
</a:doc>
